000100040201             PGM        PARM(&ZIPFILE &FILES &REPLACE &COMPLVL +
000200040201                          &PASSWORD)
000300040201             DCL        VAR(&ZIPFILE) TYPE(*CHAR) LEN(128)
000400040201             /* 2 + 128 * 20 */
000500040201             DCL        VAR(&FILES) TYPE(*CHAR) LEN(2562)
000600050413             DCL        VAR(&REPLACE) TYPE(*CHAR) LEN(8)
000700040201             DCL        VAR(&COMPLVL) TYPE(*CHAR) LEN(1)
000800040201             DCL        VAR(&PASSWORD) TYPE(*CHAR) LEN(32)
000900040201
001000040201             DCL        VAR(&FILE) TYPE(*CHAR) LEN(128)
001100040201             /* (128 + 2) * 20 + 127 */
001200040201             DCL        VAR(&FILE_STR) TYPE(*CHAR) LEN(2727)
001300040201             DCL        VAR(&FILE_NUM) TYPE(*DEC) LEN(3 0)
001400040201             DCL        VAR(&I) TYPE(*DEC) LEN(3 0) VALUE(0)
001500040201             DCL        VAR(&POS) TYPE(*DEC) LEN(5 0)
001600040201
001700040201             DCL        VAR(&CMDSTR) TYPE(*CHAR) LEN(3000) +
001800040201                          VALUE('CALL PGM(MINIZIP400) PARM(')
001900040201             DCL        VAR(&Q) TYPE(*CHAR) LEN(1) VALUE('''')
002000040201             DCL        VAR(&ERR) TYPE(*CHAR) LEN(7)
002100040201             DCL        VAR(&ERR_DEC) TYPE(*DEC) LEN(10)
002200040201
002300040201             /* QtmhGetEnv parameters */
002400040201             DCL        VAR(&RCVVAR) TYPE(*CHAR) LEN(100) /* output */
002500040201             DCL        VAR(&RCVLEN_B) TYPE(*CHAR) LEN(4) +
002600040201                          VALUE(X'00000064') /* input  */
002700040201             DCL        VAR(&RSPLEN_B) TYPE(*CHAR) LEN(4)   /* output */
002800040201             DCL        VAR(&RSPLEN) TYPE(*DEC) LEN(3)
002900040201             DCL        VAR(&REQVAR) TYPE(*CHAR) LEN(20) +
003000040201                          VALUE(MINIZIP_RTNCDE) /* input  */
003100040201             DCL        VAR(&REQLEN_B) TYPE(*CHAR) LEN(4) +
003200040201                          VALUE(X'0000000E') /* input  */
003300040201             DCL        VAR(&QUSEC) TYPE(*CHAR) LEN(16) +
003400040201                          VALUE(X'00100000000000000000000000000000') +
003500040201                          /* input/output  */
003600040201             /* QUSEC structure */
003700040201             DCL        VAR(&QUSBAVL_B) TYPE(*CHAR) LEN(4)  /* output */
003800040201             DCL        VAR(&QUSBAVL) TYPE(*DEC) LEN(3)
003900040201
004000040201             /* Concat ZIPed files to a variable */
004100040201             CHGVAR     VAR(&FILE_NUM) VALUE(%BINARY(&FILES 1 2))
004200040201 LOOP:       CHGVAR     VAR(&POS) VALUE(&I * 128 + 3)
004300040201             CHGVAR     VAR(&FILE_STR) VALUE(&FILE_STR |< ' ' || &Q +
004400040201                          || %SST(&FILES &POS 128) |< &Q || ' ')
004500040201             CHGVAR     VAR(&I) VALUE(&I + 1)
004600040201             IF         COND(&I = &FILE_NUM) THEN(GOTO +
004700040201                          CMDLBL(NEXT))
004800040201             GOTO       CMDLBL(LOOP)
004900040201
005000040201             /* Construct command string to pass QCMDEXC */
005100040201 NEXT:       IF         COND(&REPLACE = '*REPLACE') THEN(CHGVAR +
005200040201                          VAR(&CMDSTR) VALUE(&CMDSTR |< &Q || '-o' +
005300040201                          || &Q))
005400040201             IF         COND(&REPLACE = '*APPEND') THEN(CHGVAR +
005500040201                          VAR(&CMDSTR) VALUE(&CMDSTR |< &Q || '-a' +
005600040201                          || &Q))
005700040201
005800040201             CHGVAR     VAR(&CMDSTR) VALUE(&CMDSTR |> &Q || '-' |< +
005900040201                          &COMPLVL |< &Q)
006000040201
006100040201             IF         COND(&PASSWORD *NE ' ') THEN(CHGVAR +
006200040201                          VAR(&CMDSTR) VALUE(&CMDSTR |> &Q || '-p' +
006300040201                          || &Q || ' ' || &Q |< &PASSWORD |< &Q))
006400040201
006500040201             CHGVAR     VAR(&CMDSTR) VALUE(&CMDSTR |> &Q |< &ZIPFILE +
006600040201                          |< &Q || ' ' |< &FILE_STR |< ')')
006700040201
006800040201             /* Call minizip via QCMDEXC */
006900040201/*           SNDPGMMSG  MSG(&CMDSTR)          */
007000040201             CALL       PGM(QCMDEXC) PARM(&CMDSTR 300)
007100040201             MONMSG     MSGID(CPF0000) EXEC(DO)
007200040201             SNDPGMMSG  MSGID(CPF9897) MSGF(QCPFMSG) MSGDTA('Command +
007300040201                          failed. QCMDEXC returned unexpected +
007400040201                          error.') MSGTYPE(*ESCAPE)
007500040201             GOTO       CMDLBL(EXIT)
007600040201             ENDDO
007700040201
007800040201             /* Get environment variable */
007900040201             CALLPRC    PRC('QtmhGetEnv') PARM(&RCVVAR &RCVLEN_B +
008000040201                          &RSPLEN_B &REQVAR &REQLEN_B &QUSEC)
008100040201
008200040201             CHGVAR     VAR(&QUSBAVL_B) VALUE(%SST(&QUSEC 5 4))
008300040201             CHGVAR     VAR(&QUSBAVL) VALUE(%BIN(&QUSBAVL_B))
008400040201             IF         COND(&QUSBAVL > 0) THEN(DO)
008500040201             SNDPGMMSG  MSGID(CPF9897) MSGF(QCPFMSG) +
008600040201                          MSGDTA('QtmhGetEnv returned ' || +
008700040201                          %SST(&QUSEC 9 7) |< '.') MSGTYPE(*ESCAPE)
008800040201             GOTO       CMDLBL(EXIT)
008900040201             ENDDO
009000040201
009100040201             CHGVAR     VAR(&RSPLEN) VALUE(%BIN(&RSPLEN_B))
009200040201             IF         COND(&RSPLEN < 1) THEN(DO)
009300040201             SNDPGMMSG  MSGID(CPF9897) MSGF(QCPFMSG) +
009400040201                          MSGDTA('QtmhGetEnv returned invalid +
009500040201                          length (smaller than 1).') MSGTYPE(*ESCAPE)
009600040201             GOTO       CMDLBL(EXIT)
009700040201             ENDDO
009800040201
009900040201             /* Examine environment variable (exit status of mnizip) */
010000040201             CHGVAR     VAR(&ERR) VALUE(%SST(&RCVVAR 1 &RSPLEN))
010100040201             CHGVAR     VAR(&ERR_DEC) VALUE(&ERR)
010200040201             IF         COND(&ERR_DEC = 0) THEN(SNDPGMMSG +
010300040201                          MSGID(CPF9898) MSGF(QCPFMSG) +
010400040201                          MSGDTA('Command completed'))
010500040201             ELSE       CMD(SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
010600040201                          MSGDTA('Command failed. See low-level +
010700040201                          message for detail.') MSGTYPE(*ESCAPE))
010800040201
010900040201 EXIT:       ENDPGM
